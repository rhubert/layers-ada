# download gnat toolchain from alr

# one possibiity would be to build the host-compat with ada enabled and
# use this toolchain to build all host ada tools
#
# But than we'd have a old gcc (9.5.0 ATM). Instead we keep this seperate
# for now and do not overwrite the host/target-toolchain with this recipe.

multiPackage:
  x86_64-pc-linux-gnu:
    environment:
      AUTOCONF_TARGET: "x86_64-pc-linux-gnu"
      GNAT_NAME: "gnat_native"
      GNAT_VERSION: "13.2.2"
      GPRBUILD_VERSION: "22.0.1"

buildTools: [alr]
buildVars: [GNAT_NAME, GNAT_VERSION, GPRBUILD_VERSION]
buildNetAccess: True
buildScript: |
  alr install --prefix=$(pwd) ${GNAT_NAME}=${GNAT_VERSION} gprbuild=${GPRBUILD_VERSION}

packageVars: [AUTOCONF_TARGET]
packageScript: |
  rsync -a --delete $1/ .

  pushd bin
  TOOLS=(addr2line size strings gprof readelf objdump)
  for i in ${TOOLS[@]} ; do
    mv $i ${AUTOCONF_TARGET}-$i
  done

  for i in nm objcopy; do
    cp $i ${AUTOCONF_TARGET}-$i
  done

  for i in gpr*; do
    ln -snf $i ${AUTOCONF_TARGET}-$i
  done
  for i in gnat*; do
    ln -snf $i ${AUTOCONF_TARGET}-$i
  done

  # prefix some tools with AUTOCONF_TARGET
  TOOLS=(ar as gdb ld ranlib strip)
  for T in ${TOOLS[@]}; do
    mv ${T} ${AUTOCONF_TARGET}-${T}
  done
  popd

provideTools:
  # use this toolchain to compile for the host-system
  gnat-host-toolchain:
    path: "bin"
    environment:
       # usual compiler variables
       AR: "${AUTOCONF_TARGET}-ar"
       AS: "${AUTOCONF_TARGET}-as"
       CC: "${AUTOCONF_TARGET}-gcc"
       CPP: "${AUTOCONF_TARGET}-cpp"
       CXX: "${AUTOCONF_TARGET}-g++"
       GDB: "${AUTOCONF_TARGET}-gdb"
       LD: "${AUTOCONF_TARGET}-ld"
       NM: "${AUTOCONF_TARGET}-nm"
       OBJCOPY: "${AUTOCONF_TARGET}-objcopy"
       OBJDUMP: "${AUTOCONF_TARGET}-objdump"
       RANLIB: "${AUTOCONF_TARGET}-ranlib"
       READELF: "${AUTOCONF_TARGET}-readelf"
       STRIP: "${AUTOCONF_TARGET}-strip"

       ARCH: "${ARCH}"
       AUTOCONF_BUILD: "${AUTOCONF_TARGET}"
       AUTOCONF_HOST: "${AUTOCONF_TARGET}"
       CROSS_COMPILE: "${AUTOCONF_TARGET}-"

  gnat-target-toolchain:
    path: "bin"
    environment:
       # usual compiler variables
       AR: "${AUTOCONF_TARGET}-ar"
       AS: "${AUTOCONF_TARGET}-as"
       CC: "${AUTOCONF_TARGET}-gcc"
       CPP: "${AUTOCONF_TARGET}-cpp"
       CXX: "${AUTOCONF_TARGET}-g++"
       GDB: "${AUTOCONF_TARGET}-gdb"
       LD: "${AUTOCONF_TARGET}-ld"
       NM: "${AUTOCONF_TARGET}-nm"
       OBJCOPY: "${AUTOCONF_TARGET}-objcopy"
       OBJDUMP: "${AUTOCONF_TARGET}-objdump"
       RANLIB: "${AUTOCONF_TARGET}-ranlib"
       READELF: "${AUTOCONF_TARGET}-readelf"
       STRIP: "${AUTOCONF_TARGET}-strip"

       ARCH: "${ARCH}"
       AUTOCONF_HOST: "${AUTOCONF_TARGET}"
       CROSS_COMPILE: "${AUTOCONF_TARGET}-"

       GNATPREP: "${AUTOCONF_TARGET}-gnatprep"

  # TODO: install gprbuild only via alr?
  gprbuild:
    path: "bin"
